### Recuperar información del pokemon ditto

GET http://localhost:1234/pokemon/ditto


### Para crear un Pokemon

POST http://localhost:1234/pokemon
Content-Type: application/json
{
  "name": "ditto",
  "type": "normal",
  "moves": [
      "transform"
  ]
}

### Obtener todas las películas. 

GET http://localhost:1234/movies


### Si se le pasa un género como parámetro, sólo muestra las películas de ese género.

GET http://localhost:1234/movies?genre=Action   


### Recuperar una película por su id

GET http://localhost:1234/movies/7f16577c-8eea-11ee-8386-0a0027000012

### Crear una película utilizando validaciones zod. Si algún atributo no cumple con los requisitos establecidos en el schema (movies.js), la api no los aceptará.

POST http://localhost:1234/movies
Content-Type: application/json

{
    "title": "prueba",
    "year": 2009,
    "director": "prueba",
    "duration": 162,
    "poster": "https://i.etsystatic.com/35681979/r/il/dfe3ba/3957859451/il_fullxfull.3957859451_h27r.jpg",
    "genre": ["Action", "Adventure", "Fantasy"],
    "rate": 78.5
}

### Actualizar una película utilizando validaciones zod. Se puede modificar uno o varios atributos excepto el id ya que éste no lo incluímos en el schema.

PATCH http://localhost:1234/movies/c4412c73-8eee-11ee-8386-0a0027000012
Content-Type: application/json

{
  "year": 1998,
  "duration": 123
}

### Borrar una película

DELETE http://localhost:1234/movies/19902f1f-3bac-4386-ab10-df7daaacb3e1